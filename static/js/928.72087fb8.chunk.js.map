{"version":3,"file":"static/js/928.72087fb8.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","components/ContactList.jsx","components/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst ContactForm = ({ saveContact }) => {\n  return (\n    <div style={{display:\"flex\", flexDirection:\"column\", alignItems: \"center\",}}>\n      <h1>Create Contact</h1>\n      <form\n        onSubmit={saveContact}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          width: 400,\n          padding: 10,\n          gap: 10,\n          border: '1px solid black',\n        }}\n      >\n        <label htmlFor=\"name\" style={{ fontSize: 20 }}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          style={{ width: 150, marginBottom: 10 }}\n        />\n        <label htmlFor=\"number\" style={{ fontSize: 20 }}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          style={{ width: 150, marginBottom: 10 }}\n        />\n        <button\n          type=\"submit\"\n          style={{\n            width: 100,\n            backgroundColor: 'white',\n            borderRadius: 5,\n            border: 'none',\n            boxShadow: '-1px 1px 3px -1px',\n            cursor: 'pointer',\n          }}\n        >\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  saveContact: propTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import propTypes from 'prop-types';\n\nfunction ContactList({ contacts, filter, deleteContact }) {\n\n  if (filter !== '') {\n    let newContacts = contacts.filter(el =>\n      el.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n\n    return (\n      <ul>\n        {newContacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              onClick={() => deleteContact(contact.id)}\n              style={{\n                marginLeft: 10,\n                backgroundColor: 'white',\n                borderRadius: 5,\n                border: 'none',\n                boxShadow: '-1px 1px 3px -1px',\n                cursor: 'pointer',\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} style={{ marginBottom: 10 }}>\n          {contact.name}: {contact.number}\n          <button\n            onClick={() => deleteContact(contact.id)}\n            style={{\n              marginLeft: 10,\n              backgroundColor: 'white',\n              borderRadius: 5,\n              border: 'none',\n              boxShadow: '-1px 1px 3px -1px',\n              cursor: 'pointer',\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: propTypes.array,\n  filter: propTypes.string,\n  deleteContact: propTypes.func,\n};\n\nexport default ContactList;\n","import propTypes from 'prop-types';\n\nfunction Filter({ filterContact }) {\n  return (\n    <>\n      <label htmlFor=\"filter\" style={{ display: 'flex' }}>\n        Find contact by name\n      </label>\n      <input type=\"search\" id=\"filter\" onChange={filterContact}></input>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filterContact: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from \"../components/Filter\";\nimport { fetchContacts, addContact, deleteContact } from 'redux/operations';\nimport Notiflix from 'notiflix';\nimport { Dna } from 'react-loader-spinner';\nimport { useEffect } from 'react';\nimport { updateFilter } from '../redux/filter/slice';\n\nconst Contacts = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const token = useSelector(state => state.auth.token);\n  const filter = useSelector(state => state.filter);\n  const { isLoading, error } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts(token));\n  }, [token, dispatch]);\n\n  //Guarda contacto nuevo\n  const saveContact = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n\n    let validation = contacts.find(el =>\n      el.name\n        .toLocaleLowerCase()\n        .includes(form.elements.name.value.toLocaleLowerCase())\n    );\n    if (validation === undefined) {\n      dispatch(\n        addContact({\n          token,\n          name: form.elements.name.value,\n          number: form.elements.number.value,\n        })\n      );\n      form.reset();\n    } else {\n      Notiflix.Notify.failure(validation.name + 'is already in contacts');\n      form.reset();\n    }\n  };\n\n  //Borrar contacto\n  const handleDeleteContacts = id => {\n    dispatch(deleteContact({ id, token }));\n  };\n\n   //Muestra contactos de acuerdo a filtro\n  const filterContact = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div style={{display:\"flex\", flexDirection:\"column\",}}>\n      <ContactForm saveContact={saveContact} />\n      <h1>Contacts</h1>\n      <Filter filterContact={filterContact}></Filter>\n      <ContactList\n        contacts={contacts}\n        filter={filter.value}\n        deleteContact={handleDeleteContacts}\n      />\n      {isLoading && !error && (\n        <Dna\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["saveContact","style","display","flexDirection","alignItems","onSubmit","width","padding","gap","border","htmlFor","fontSize","type","id","name","pattern","title","required","marginBottom","backgroundColor","borderRadius","boxShadow","cursor","contacts","filter","deleteContact","newContacts","el","toLocaleLowerCase","includes","map","contact","number","onClick","marginLeft","filterContact","onChange","useSelector","state","items","token","auth","isLoading","error","dispatch","useDispatch","useEffect","fetchContacts","evt","preventDefault","form","currentTarget","validation","find","elements","value","undefined","addContact","reset","Notiflix","e","updateFilter","visible","height","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}